Balanced binary tree
    
    class Solution:
    def isBalanced(self, root: Optional[TreeNode]) -> bool:
        if root == None:
            return True
        righth = self.isBalanced(root.right)
        if righth == 0:
            return 0
        lefth = self.isBalanced(root.left)
        if lefth == 0:
            return 0
        if abs(lefth-righth)>1:
            return 0
        return max(righth,lefth)+1
        
Remove duplicates from sorted list
        
        class Solution:
        def deleteDuplicates(self, head: Optional[ListNode]) -> Optional[ListNode]:
            cur = head
            while cur:
                while cur.next and cur.next.val == cur.val:
                    cur.next = cur.next.next
                cur = cur.next
            return head
